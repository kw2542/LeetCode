Q:
  Suppose a sorted array is rotated at some pivot unknown to you beforehand.

  (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

  You are given a target value to search. If found in the array return its index, otherwise return -1.

  You may assume no duplicate exists in the array.

Notes:
  No matter how many times the array is rotated, there will be only one rotate point
  If left < mid, then the left array must the in non-decreasing order
  else If mid < right, then the right array must be in non-decreasing order
  else we have no choice but search both. (Actually there are more constrains but it seems that they donâ€™t affect the performance much)